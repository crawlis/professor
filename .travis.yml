language: rust

services:
  - docker

env:
  global:
    - MODULE_NAME=module_base

jobs:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - rust: stable
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-gnu
    - rust: stable
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-musl
    - rust: stable
      os: osx
      env: TARGET=x86_64-apple-darwin
    - rust: beta
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-gnu
    - rust: beta
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-musl
    - rust: beta
      os: osx
      env: TARGET=x86_64-apple-darwin
    - rust: nightly
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-gnu
    - rust: nightly
      os: linux
      dist: xenial
      env: TARGET=x86_64-unknown-linux-musl
    - rust: nightly
      os: osx
      env: TARGET=x86_64-apple-darwin

install:
  - ci/scripts/install.sh

before_script:
  - set -e

script:
  - ci/scripts/build-debug.sh ${MODULE_NAME}
  - ci/scripts/test-debug.sh ${MODULE_NAME}

after_script:
  - set +e

before_deploy:
  - ci/scripts/build-release.sh ${MODULE_NAME}
  - ci/scripts/test-release.sh ${MODULE_NAME}
  - mkdir -p target/executable
  - cp target/${TARGET}/debug/${MODULE_NAME} target/executable/${MODULE_NAME}-${TRAVIS_TAG}-${TARGET}-debug
  - cp target/${TARGET}/release/${MODULE_NAME} target/executable/${MODULE_NAME}-${TRAVIS_TAG}-${TARGET}

deploy:
  provider: releases
  edge: true
  token: ${GITHUB_CRAWLIS_CI_RELEASE_TOKEN}
  file_glob: true
  file: target/executable/*
  on:
    repo: crawlis/${MODULE_NAME}
    tags: true
    condition: ${TRAVIS_RUST_VERSION} = stable

branches:
  only:
    - master
    # Regex pattern to match tags
    - /^v\d+\.\d+\.\d+.*$/
